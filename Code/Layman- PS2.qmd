---
title: "Layman- PS2"
author: "ML"
format: html
editor: visual
---

## Project 2 - Layman

10/30/2024

first, clean up environment and install packages

```{r}
rm (list = ls()) 
library(tidyverse)
library(here)
```

Now, Examine the dataset with at least 2 functions.

read in the data and look at it

```{r}
halloween <- read.csv(here("Data", "Halloween_data_PS2.csv"))
glimpse (halloween)
str(halloween)
View(halloween)
```

Assign any data types that you think would be appropriate after examining the data.

change character data to factor variables

```{r}
halloween$costume <- as.factor(halloween$costume)
halloween$Costume_type <- as.factor(halloween$Costume_type)
halloween$sugar_high <- as.factor(halloween$sugar_high)
```

Fix any errors you see in the dataset.

check levels of variables

```{r}
levels (halloween$Costume_type)
levels (halloween$sugar_high)
```

fix data with inconsistent labelling and make sure it gets fixed

```{r}
fix <- which (halloween$Costume_type %in% c ("not scary" , "notscary")) 
  halloween$Costume_type [fix] <- "Not scary"
fix1 <- which (halloween$Costume_type %in% c ("scaly" , "scary" ,"scary ")) 
  halloween$Costume_type [fix1] <- "Scary"

  fix2 <- which (halloween$sugar_high %in% c ("no" , "NO"))
  halloween$sugar_high [fix2] <- "No"
fix3 <- which (halloween$sugar_high == ("yes")) 
  halloween$sugar_high [fix3] <- "Yes"
  
halloween$Costume_type <- factor (halloween$Costume_type)
levels(halloween$Costume_type)
halloween$sugar_high <- factor (halloween$sugar_high)
levels(halloween$sugar_high)
```

Make a scatterplot of min_temp_trick_treat_C vs. age and write code that recreates Figure 1 below as closely as possible.

use ggplot to create the plot, be sure to add change the shape and color and add axis labels

```{r}
ggplot (halloween, aes (x=age,y=min_temp_trick_treat_C, group=Costume_type))+
  geom_point(aes(shape=Costume_type, color=Costume_type, size= 10))+
  xlab("Age of trick-or-treater") + 
  ylab("Minimum temperature while out")+
  theme_bw()
```

Next write code that isolates the data for children who are 10 years old or older and who consumed 100 or more grams of Halloween candy. Use the resulting data to plot a histogram showing the a count of the number of kids who each ate certain numbers of pieces of candy. Reproduce Figure 2 as closely as possible.

use ggplot to make a histogram based on the altered data, change axis labels

```{r}
df8 <- halloween %>%
  filter(age >= 10, g_candy_consumed >=100 )
  
ggplot(df8,aes(x=candy_pieces))+
  geom_histogram()+
  xlab("Number of candy pieces eaten") 
  ylab("Count")

```

Next calculate some summary statistics that show the mean and standard deviation for the following variables broken down by whether or not the child experienced a sugar high. Include in your code a method that opens a view of the resulting data as a new table view in RStudio. Do not create a new object in your Environment.

• age • grams of candy consumed

alter the halloween data and view summary stats

```{r}
halloween %>% 
       group_by (sugar_high)%>%
       summarise(
        mean_age = mean(age),
        sd_age = sd (age),
        mean_candy = mean(g_candy_consumed),
        sd_candy = sd(g_candy_consumed),
        )

```

10\. Next, write code that replicates figure 3 below as closely as you can.

use ggplot to make a boxplot, make sure it follows aesthetic values and has two columns, add axis labels

```{r}
ggplot (halloween, aes (x=Costume_type,y=g_candy_consumed))+
  geom_boxplot() + # makes a boxplot
  geom_point(size=2,colour='orange',alpha=1)+ 
  facet_wrap(~sugar_high, nrow=1)+
  xlab("Costume type") + #xaxis label
  ylab("Amount of candy consumed (g)")+ #yaxis label
  theme_bw()
```
