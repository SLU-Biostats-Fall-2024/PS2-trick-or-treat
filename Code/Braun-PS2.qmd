---
title: "Braun-PS2"
format: html
editor: visual
---

3)  

```{r}
rm(list=ls()) # clear the environment
library(tidyverse) # import tidyverse package
library(here) # import here package
```

```{r}
halloween <- read.csv(here("Data", "Halloween_data_PS2.csv")) # import the data set
```

4)  Examine the data set using `glimpse()` and `str()`

```{r}
glimpse(halloween) # allows us to see the column title, data type, and the first few data entries

str(halloween) # allows us to see the column title, data type, and the first few data entries
```

5 and 6) convert costume_type to a factor variable and fix the "scary" and "not scary" factors

```{r}
halloween$Costume_type <- as.factor(halloween$Costume_type)

fix_costume_NotScary <- which(halloween$Costume_type %in% c("Not scary", "not scary", "notscary")) # find all rows that "not scary"

halloween$Costume_type[fix_costume_NotScary] <- "Not scary" # assign the same name for each of those rows 


# do the same for "scary" costume_type
fix_costume_Scary <- which(halloween$Costume_type %in% c("scary", "scaly", "Scary", "scary ")) # find all rows that "scary"

halloween$Costume_type[fix_costume_Scary] <- "Scary" # assign the same name for each of those rows 

halloween$Costume_type <- factor(halloween$Costume_type) # reassign the factors
```

change sugar_high to a factor variable and change "yes" to "Yes" and "no"/"NO" to "No"

```{r}
halloween$sugar_high <- as.factor(halloween$sugar_high) # turn sugar_high into a factor

fix_sugarHigh_yes <- which(halloween$sugar_high == "yes") # locate all rows where sugar_high = "yes"

halloween$sugar_high[fix_sugarHigh_yes] <- "Yes" # change "yes" rows to "Yes"


fix_sugarHigh_no <- which(halloween$sugar_high %in% c("no", "NO")) #locate "no" and "NO" rows

halloween$sugar_high[fix_sugarHigh_no] <- "No" # change "no" and "NO" rows to "No"

halloween$sugar_high <- factor(halloween$sugar_high) # reassign the factors
```

7)  Create a scatterplot of min temp and age. We need to make the points different colors, shapes, and increase their size. Change the x and y axis titles and add a caption.

```{r}
ggplot(halloween, aes(y=min_temp_trick_treat_C, x=age, color = Costume_type)) + 
  geom_point(aes(shape = Costume_type), size = 5) + # make points bigger and color by costume_type
  xlab("Age of trick-or-treater (years)") + # change x axis name
  ylab("Minimum temperature while out (C)") + # change y axis name
  labs(caption = "Figure 1. Minimum temperature that kids will trick-or-treat before going home as a function of each child’s age and costume type.") + # create caption
  theme(plot.caption = element_text(face = "italic", hjust = 0)) # alter caption
```

8)  

```{r}
over_10 <- halloween |> 
  filter(age >= 10, g_candy_consumed >= 100) 
# creates a new data frame that only keeps kids aged 10 or older and kids who have consumed 100 g of sugar or more
```

Create a histogram that counts the amount of candy (at least 100 g) that kids 10 and over have eaten. Change the x and y axis titles and add a caption.

```{r}
ggplot(over_10, aes(candy_pieces)) +
  geom_histogram() +
  ylab("Count") +
  xlab("Number of candy pieces eaten") +
  labs(caption = "Figure 2. Count of number of children (age 10 and older and who consumed at least 100 grams of candy) eating different
numbers of pieces of candy.
") + # create caption
  theme(plot.caption = element_text(face = "italic", hjust = 0)) # alter caption
```

9)  Find the mean and sd of age and grams of candy consumed based on whether they were on a sugar high

```{r}
halloween |> group_by(sugar_high) |> # separates mean and sd based on if the kids were on a sugar high
  summarise(mean(age), sd(age), mean(g_candy_consumed), sd(g_candy_consumed)) |> # finds the means and sd for g_candy_consumed and age
  view() # prints the table in another window
```

10) Create a box and whisker plot using costume type as the x variable and grams of candy consumed as the y variable. the plot will be grouped by whether or not the kids were on a sugar high. Change the transperancy of the points, the x and y axis titles and add a caption

```{r}
ggplot(halloween, aes(x = Costume_type, y = g_candy_consumed)) +
  geom_boxplot() +
  facet_wrap(halloween$sugar_high) +
  geom_point(color = "orange", alpha = .6) +
  xlab("Costume Type") +
  ylab("Amount of candy consumed (g)") +
  labs(caption = "Figure 3. Box and whisker plot showing amount of candy consumed by children wearing different types of Halloween
costume separated according to whether the child experienced a resulting sugar high (“no” vs. “yes”).") + # create caption
  theme(plot.caption = element_text(face = "italic", hjust = 0)) # alter caption
```
